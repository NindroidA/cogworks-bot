name: Discord Changelog Update

on:
  push:
    branches: [main]
    paths:
      - 'CHANGELOG.md'

jobs:
  send-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract and format changelog
        id: changelog
        run: |
          # Extract the first changelog section (latest version)
          CHANGELOG=$(awk '
            /^# Dev Update/ {
              if (found) exit;
              found=1;
              # Capture the version line but make it smaller (##)
              print "## " substr($0, 3);
              next;
            }
            found {
              if (/^# Dev Update/) exit;
              # Convert ## headers to ### (make subsections smaller)
              if (/^## /) {
                print "#" $0;
                next;
              }
              # Convert ### headers to #### if they exist
              if (/^### /) {
                print "#" $0;
                next;
              }
              print;
            }
          ' CHANGELOG.md)
          
          # Get version number
          VERSION=$(head -1 CHANGELOG.md | grep -oE 'v[0-9]+\.[0-9]+\.[0-9]+' || echo "Latest")
          
          # Truncate if too long (Discord limit is 2000 chars for message content)
          REPO_URL="https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md"
          if [ ${#CHANGELOG} -gt 1800 ]; then
            CHANGELOG="${CHANGELOG:0:1800}

            ...
            [View full changelog](${REPO_URL})"
          fi
          
          # Set outputs
          {
            echo "version=$VERSION"
            echo "content<<CHANGELOG_EOF"
            echo "$CHANGELOG"
            echo "CHANGELOG_EOF"
          } >> $GITHUB_OUTPUT

      - name: Send to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          # Create the message with main header + changelog
          MESSAGE="# ðŸ“‹ Cogworks Bot Update
          
          ${{ steps.changelog.outputs.content }}

          -# Repository: ${{ github.repository }}"
          
          # Create JSON payload
          cat << EOF > payload.json
          {
            "content": $(echo "$MESSAGE" | jq -Rs .)
          }
          EOF
          
          # Send to Discord
          curl -H "Content-Type: application/json" \
               -d @payload.json \
               "$DISCORD_WEBHOOK"